apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: twenty-server
  name: twenty-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: twenty-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: twenty-server
    spec:
      containers:
        - env:
            - name: APP_SECRET
            - name: ENABLE_DB_MIGRATIONS
              value: "true"
            - name: FRONT_BASE_URL
            - name: PG_DATABASE_URL
              value: postgres://postgres:twenty@twenty-db:5432/default
            - name: PORT
              value: "3000"
            - name: REDIS_URL
              value: redis://redis:6379
            - name: SERVER_URL
            - name: SIGN_IN_PREFILLED
            - name: STORAGE_S3_ENDPOINT
            - name: STORAGE_S3_NAME
            - name: STORAGE_S3_REGION
            - name: STORAGE_TYPE
          image: "twentycrm/twenty:latest"
          livenessProbe:
            exec:
              command:
                - curl --fail http://localhost:3000/healthz
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: twenty-server
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/packages/twenty-server/.local-storage
              name: twenty-server-local-data
            - mountPath: /app/docker-data
              name: twenty-docker-data
      restartPolicy: Always
      volumes:
        - name: twenty-server-local-data
          persistentVolumeClaim:
            claimName: twenty-server-local-data
        - name: twenty-docker-data
          persistentVolumeClaim:
            claimName: twenty-docker-data
