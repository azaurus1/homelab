---
# For setting microk8s homepath storage path
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: volume-hostpath
provisioner: microk8s.io/hostpath
reclaimPolicy: Delete
parameters:
  pvDir: /mnt/volume
volumeBindingMode: Immediate
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: media
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 300Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: downloads
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 300Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: config-sonarr
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 3Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: config-radarr
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 3Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: config-ombi
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 3Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: config-heimdall
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 3Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media   
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: matrix-synapse-data
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 10Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media   
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: matrix-postgresql
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 16Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media   
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: files-vikunja
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  accessModes:
    - "ReadWriteMany" #"ReadWriteMany"
  resources:
    requests:
      storage: 3Gi #1Gi
  storageClassName: volume-hostpath
  #volumeName: jellyfin-media   